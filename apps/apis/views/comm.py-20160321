#!/usr/bin/env python
#-*- coding: utf-8 -*-
from django.http import HttpResponse,HttpResponseRedirect
from django.shortcuts import render_to_response,RequestContext
from django.contrib.auth.decorators import login_required
from apps.UserManage.views.permission import PermissionVerify
from apps.WorkOrder.models import Process,DailyInfo,RepairInfo,StatusList,IDCList,OperList,SpareList,FaultList,ModelList,RepairInfoFault
from apps.UserManage.models import User
#from django.utils import simplejson
import simplejson as json
import datetime


import sys
reload(sys)
sys.setdefaultencoding('utf8')


#@login_required
#@PermissionVerify()
def dailywo(request):
    if request.method == "POST":
        received_json_data = json.loads(request.body)
        for item in received_json_data:
            try:
                status = item["status"]
                dailywo_code = item["dailywo_code"]
                if status == "close":
                    # 关闭日常工单
                    try:
                        id_st = StatusList.objects.get(id_st = 1)
                        id_user = User.objects.get(username = 'api')
                        flag = Process.objects.filter(id_st = id_st,pr_wocode = dailywo_code)
                        if flag:
                            #防重复提交
                            json_date = {'code':200,'message':'状态已置为完成!','ids':[dailywo_code,]}
                        else:
                            ob_process = Process(pr_wocode = dailywo_code,\
                                                 id_user = id_user,\
                                                 id_st = id_st )
                            ob_process.save()
                            DailyInfo.objects.filter(dainfo_code = dailywo_code ).update(id_st = id_st)
                            json_date = {'code':200,'message':'数据保存成功!','ids':[dailywo_code,]}
                    except Exception,ex:
                        print ex
                        json_date = {'code':500,'message':'服务器端保存失败!','ids':[dailywo_code,]}
                elif status == "get_fault":
                    # 获取日常工单的故障类型
                    try:
                        print 'get wo fault'
                        iDailyInfo = DailyInfo.objects.get(dainfo_code = dailywo_code)
                        if iDailyInfo.id_fault.all():
                            faults = [ item.fault_cn for item in DailyInfo.id_fault.all()]
                            json_date = {'code':200,'message':'查询成功!','faults':faults}
                        else:
                            json_date = {'code':400,'message':'查询成功!','faults':[]}
                    except Exception,ex:
                        json_date = {'code':400,'message':'没找到相关记录,请确定工单号!'}
                        print ex
            except Exception,ex:
                print ex
                try:
                    sla = item["sla"]
                except Exception,ex:
                    sla = ""
                # 新日常工单（上架、搬迁）
                if sla == "putaway":
                    idc_cn = item["dc"]
                    dainfo_code = "API"+datetime.datetime.now().strftime("%Y%m%d%H%M%S%f")
                    id_idc = IDCList.objects.get(idc_cn = idc_cn)
                    id_op = OperList.objects.get(id_op = 8) # 服务器硬件操作
                    id_op_li = OperList.objects.get(id_op = 9) # 服务器搬迁
                    id_user = User.objects.get(username = 'api')
                    id_st = StatusList.objects.get(id_st = 7) #待接收
                    dainfo_content = """
附件为近期要搬入搬出的设备列表.<br/>
附件表中原机架位为本机房的，为预计搬出的设备；目标机架位为本机房的，为预计搬入的设备.<br />
请注意查看设备出入室授权，请注意核查搬入搬出设备资产信息，监管上架搬迁人员操作.<br /> 
                                     """
                    try:
                        ob_dailywo = DailyInfo(id_idc = id_idc,\
                                               id_op = id_op,\
                                               id_op_li = id_op_li,\
                                               id_user= id_user,\
                                               id_st = id_st,\
                                               dainfo_code = dainfo_code,\
                                               dainfo_affirm = True,\
                                               dainfo_content = dainfo_content)
                        ob_dailywo.save()
                        #add new process startime
                        ob_process = Process(pr_wocode = dainfo_code,\
                                             id_user = id_user,\
                                             id_st = id_st)
                        ob_process.save()
                        json_date = {'code':200,'message':'工单创建成功!','ids':[dainfo_code,]}
                    except Exception,ex:    
                        json_date = {'code':500,'message':'服务器端保存失败!','ids':[dainfo_code,]}
                else:
                    try:
                        # 新日常工单（重启）
                        # [{"dc":"土城机房","model":"lenovo rd530","sn_code":"bnyuty56","rack_code":"bj-yf-02a-01-01-01","iloip":"10.12.12.14","sla":"简单"}]
                        idc_cn = item["dc"]
                        model = item["model"]
                        sn_code = item["sn_code"]
                        rack_code = item["rack_code"]
                        iloip = item["iloip"]
                        dainfo_code = "API"+datetime.datetime.now().strftime("%Y%m%d%H%M%S%f")
                        id_idc = IDCList.objects.get(idc_cn = idc_cn)
                        id_op = OperList.objects.get(id_op = 6) # 服务器硬件操作
                        id_op_li = OperList.objects.get(id_op = 6) # 服务器搬迁
                        id_user = User.objects.get(username = 'api')
                        id_st = StatusList.objects.get(id_st = 7) #待接收
                        dainfo_content = """ 
<table class="table table-hover table-striped  table-bordered table-condensed">
<tr><td>序列号</td><td>机型</td><td>机架位</td><td>ILOIP</td></tr>
<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>
</table>""" %(sn_code,model,rack_code,iloip)
                        print dainfo_content
                        if sla == "简单":
                            dainfo_content = dainfo_content +"""
1.接显示器查看机器状态，屏幕拍照并发到工单附件中.<br />
2.进行重启到login操作，将结果反馈到工单、QQ."""
                        else:
                            dainfo_content = dainfo_content +"""
1.接显示器查看机器状态，屏幕拍照并发到工单附件中.<br />
2.排查机器是否存在故障，如有明显硬件故障工单中写明并QQ反馈.<br />
3.如无明显硬件故障，进行重启到login操作，反馈结果到工单、QQ """
                        try:
                            ob_dailywo = DailyInfo(id_idc = id_idc,\
                                                   id_op = id_op,\
                                                   id_op_li = id_op_li,\
                                                   id_user= id_user,\
                                                   id_st = id_st,\
                                                   dainfo_code = dainfo_code,\
                                                   dainfo_affirm = False,\
                                                   dainfo_content = dainfo_content)
                            ob_dailywo.save()
                            #add new process startime
                            ob_process = Process(pr_wocode = dainfo_code,\
                                                 id_user = id_user,\
                                                 id_st = id_st)
                            ob_process.save()
                            json_date = {'code':200,'message':'工单创建成功!','ids':[dainfo_code,]}
                        except Exception,ex:    
                            json_date = {'code':500,'message':'服务器端保存失败!','ids':[dainfo_code,]}
                    except Exception,ex:
                        print ex
                        # 参数有误
                        json_date = {'code':400,'message':'有误参数!'}
                
    else:
        # 没有提供参数
        json_date = {'code':400,'message':'没有参数!','ids':[]}
    return HttpResponse(json.dumps(json_date,ensure_ascii = False)) 

#@login_required
#@PermissionVerify()
def repairwo(request):
    if request.method == "POST":
        received_json_data = json.loads(request.body)
        for item in received_json_data:
            try:
                try:
                    status = item["status"]
                    repairwo_code = item["repairwo_code"]
                except Exception,ex:
                    status = ""
                    repairwo_code = ""
                if status == "close":
                    # 关闭报修工单
                    try:
                        id_st = StatusList.objects.get(id_st = 1)
                        id_user = User.objects.get(username = 'api')
                        flag = Process.objects.filter(id_st = id_st,pr_wocode = repairwo_code)
                        if flag:
                            #防重复提交
                            json_date = {'code':200,'message':'状态已置为完成!','ids':[repairwo_code,]}
                        else:
                            ob_process = Process(pr_wocode = repairwo_code,\
                                                 id_user = id_user,\
                                                 id_st = id_st )
                            ob_process.save()
                            RepairInfo.objects.filter(reinfo_code = repairwo_code ).update(id_st = id_st)
                            json_date = {'code':200,'message':'数据保存成功!','ids':[repairwo_code,]}
                    except Exception,ex:
                        print ex
                        json_date = {'code':500,'message':'服务器端保存失败!','ids':[repairwo_code,]}
                else:
                    # 新报修工单
                    #[{"dc":"土城机房","model":"lenovo rd530","sn_code":"bnghtyu","mt_code":"xxx","rack_code":"bj-yf-03a-02-09-03","fault_type":"cpu","fault_desc":"slot2 failed","submitted":"0"}]
                    # 添加故障相关数据
                    print 'new'
                    idc_cn = item["dc"]
                    id_model = ModelList.objects.get(model_cn = item["model"])
                    re_sn = item["sn_code"]
                    re_rock = item["rack_code"]
                    submitted = item["submitted"]
                    fault_type = item["fault_type"] #故障列表
                    spare_type = item["spare_type"] #备件列表
                    fault_num = item["fault_num"] #故障数量列表
                    re_content = item["fault_desc"] 
                    reinfo_code = datetime.datetime.now().strftime("%Y%m%d%H%M%S%f")
                    id_idc = IDCList.objects.get(idc_cn = idc_cn)
                    id_user = User.objects.get(username = 'api')
                    id_st = StatusList.objects.get(id_st = 7) #待接收
                    try:
                        ob_repairwo = RepairInfo(id_idc = id_idc,\
                                               id_user= id_user,\
                                               id_st = id_st,\
                                               id_model = id_model,\
                                               re_rock = re_rock,\
                                               re_sn = re_sn,\
                                               reinfo_code = reinfo_code,\
                                               re_submitted = submitted,\
                                               re_content = re_content)
                        ob_repairwo.save()
                        #add new process startime
                        ob_process = Process(pr_wocode = reinfo_code,\
                                             id_user = id_user,\
                                             id_st = id_st)
                        ob_process.save()
                        iRepairInfo = RepairInfo.objects.get(reinfo_code = reinfo_code)
                        for i in xrange(len(fault_num)):
                            id_fault = FaultList.objects.get(fault_cn = fault_type[i])
                            try:
                                id_spare = SpareList.objects.get(spare_cn = spare_type[i])
                            except Exception,ex:
                                id_spare = None
                            bad_num = fault_num[i]
                            ob_repairfault = RepairInfoFault(id_reinfo=iRepairInfo,id_fault=id_fault,id_spare=id_spare,refault_num=bad_num)
                            ob_repairfault.save()
                        json_date = {'code':200,'message':'工单创建成功!','ids':[reinfo_code,]}
                    except Exception,ex:    
                        print ex
                        json_date = {'code':500,'message':'服务器端保存失败!','ids':[reinfo_code,]}
            except Exception,ex:
                print ex
                # 参数有误
                json_date = {'code':400,'message':'有误参数!'}
                
    else:
        # 没有提供参数
        json_date = {'code':400,'message':'没有参数!','ids':[]}
    return HttpResponse(json.dumps(json_date,ensure_ascii = False)) 
