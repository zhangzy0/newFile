#!/usr/bin/env python
#-*- coding: utf-8 -*-
from django.http import HttpResponse,HttpResponseRedirect
from django.shortcuts import render_to_response,RequestContext
from django.contrib.auth.decorators import login_required
from django.db.models import Q
from apps.usermanage.views.permission import PermissionVerify
from apps.workorder.models import IDCList, SpareBrandList, ModelList
from apps.shelves.models import CheckCount, StandardData, CheckFailData
from plugins.myclass.shelves_models import StandardDataOb, CheckFailDataOb
from plugins.apps.shelves import check_data
from datetime import date
import requests
import sys
import json
import re
import time
import datetime
import logging


reload(sys)
sys.setdefaultencoding('utf8')
logger = logging.getLogger('shelves')

@login_required
@PermissionVerify()
def shelvesCheckCount(request):
    allTree = CheckCount.objects.all()
    all_count = {}
    fail_detail = {}
    for item in allTree:
        batch = item.cc_batch
        fail_detail[batch] = {}
        if batch not in all_count:
            all_count[batch] = []
        treeInfo = {}
        try:
            
            #year = re.match(r"(\d{4})Q.*",batch).groups()[0]
            #quarter = re.match(r"\d{4}(Q\d).*",batch).groups()[0]
            #month = re.match(r"\d{4}.*?_(\d{2}).*",batch).groups()[0]
            #onetime_pass = StandardData.objects.filter(std_batch = batch, std_onetime_pass = 1,id_model_id_brand = 1)
            onetime_pass_sql = "select id,count(*) a from shelves_standarddata left join workorder_modellist on shelves_standarddata.id_model_id= workorder_modellist.id_model where id_brand_id = {brand_id} and std_batch = \"{batch}\" and std_onetime_pass = 1;".format(brand_id = item.id_brand_id, batch = batch)
            print onetime_pass_sql
            onetime_pass = StandardData.objects.raw(onetime_pass_sql)[0].a
            #error_fix = CheckFailData.objects.filter(ck_batch = batch)
            error_fix_sql = "select * from shelves_checkfaildata left join workorder_modellist on shelves_checkfaildata.id_model_id= workorder_modellist.id_model where id_brand_id = {brand_id} and ck_batch = \"{batch}\";".format(brand_id = item.id_brand_id, batch = batch)
            error_fix = CheckFailData.objects.raw(error_fix_sql)
        except Exception,ex:
            print ex
            continue 
        treeInfo["id_brand"] = item.id_brand
        treeInfo["cc_sum"] = item.cc_sum
        treeInfo["cc_take_times"] = item.cc_end_time - item.cc_start_time
        treeInfo["cc_onetime_pass"] = 0
        treeInfo["cc_error_fix"] = 0
        print treeInfo
        all_count[batch].append(treeInfo)
        fail_detail[batch][item.id_brand.brand_en] = error_fix
    kwvars = {
        'all_count':all_count,
        'fail_detail':fail_detail,
        'request':request,
        'title':'上架验收-统计查询',
    }
    return render_to_response('shelves/checkcount.html',kwvars,RequestContext(request))

